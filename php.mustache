<?php

// Include Guzzle. If using Composer:
// require 'vendor/autoload.php';

use GuzzleHttp\Client;
{{#url.has_params}}
use GuzzleHttp\Query;
{{/url.has_params}}
{{#body}}
use GuzzleHttp\Post\PostBody;
use GuzzleHttp\Stream\StreamInterface;
{{/body}}
use GuzzleHttp\Exception\RequestException;

function send_request() {
    // {{{request.name}}} ({{{request.method}}} {{{url.base}}})
    
    $client = new Client();
    $request = $client->createRequest('{{{request.method}}}', '{{{url.base}}}');
    {{#url.has_params}}
    $query = $request->getQuery();
    {{/url.has_params}}
    {{#body}}
    $postBody = $request->getBody();
    {{/body}}
    
    try {
        {{#url.has_params}}
        $query = $request->getQuery();
        $query->replace([
        {{#url.params}}
            '{{{name}}}' => '{{{value}}}',
        {{/url.params}}
        ]);
        {{/url.has_params}}
        {{#headers.has_headers}}
        $request->addHeaders([
        {{#headers.header_list}}
            '{{{header_name}}}'=>'{{{header_value}}}',
        {{/headers.header_list}}
        ]);
        {{/headers.has_headers}}
        {{#body.has_raw_body}}
        $request->setBody(GuzzleHttp\Stream\Stream::factory('{{{body.raw_body}}}'));
        {{/body.has_raw_body}}
        {{#body.has_long_body}}
        data = '' # set your body string
        $request->setBody(GuzzleHttp\Stream\Stream::factory(data));
        {{/body.has_long_body}}
        {{#body.has_url_encoded_body}}
        $postBody->replaceFields([
        {{#body.url_encoded_body}}
            '{{{name}}}' => '{{{value}}}',
        {{/body.url_encoded_body}}
        ]);
        {{/body.has_url_encoded_body}}
        {{#body.has_multipart_body}}
        $postBody->forceMultipartUpload(true);
        $postBody->replaceFields([
        {{#body.multipart_body}}
            '{{{name}}}' => '{{{value}}}',
        {{/body.multipart_body}}
        ]);
        {{/body.has_multipart_body}}
        {{#body.has_json_body}}
        $request->setBody(GuzzleHttp\Stream\Stream::factory('{{{body.json_body_object}}}'));
        {{/body.has_json_body}}
        
        $response = $client->send($request);
        echo "Response HTTP : " . $response->getStatusCode();
    }
    catch (RequestException $e) {
        echo "HTTP Request failed\n";
        echo $e->getRequest();
        if ($e->hasResponse()) {
            echo $e->getResponse();
        }
    }
}

?>